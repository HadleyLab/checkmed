= form_for @checklist, html: { class: 'chlk-form edit_hecklist' } do |f|
  .chlk-form-line
    .mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
      = f.text_field :name, autofocus: true, class: 'mdl-textfield__input'
      = f.label :name, class: 'mdl-textfield__label'

  .chlk-form-line
    .mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
      = f.text_area :descr, class: 'mdl-textfield__input'
      = f.label :descr, class: 'mdl-textfield__label'

  .chlk-form-line
    .mdl-selectfield
      = f.collection_select :executor_role_id, ExecutorRole.ordered, :id, :name, {}, class: 'mdl-selectfield__select'

  .chlk-form-line
    .mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
      = f.text_field :treat_stage, min: 1, class: 'mdl-textfield__input'
      = f.label :treat_stage, class: 'mdl-textfield__label'

  / :hided

  / TODO Each list item may have answer options, such as:
  /   single text answer ????
  /   multiple answers as checkboxes
  /   no answers. ????

  - if @checklist.groups.any?
    = f.fields_for :groups, @checklist.groups.ordered do |a|
      = render partial: 'group_fields', locals: { f: a }
  - elsif f.object.new_record?
    - def_groups = [ \
        ChecklistGroup.new(name: 'Symptoms questions',       prior: 0), \
        ChecklistGroup.new(name: 'Physical exams questions', prior: 1), \
        ChecklistGroup.new(name: 'Labs questions',           prior: 2), \
        ChecklistGroup.new(name: 'Procedures questions',     prior: 3), \
        ChecklistGroup.new(name: 'Medications questions',    prior: 4) \
      ]
    = f.fields_for :groups, def_groups do |a|
      = render partial: 'group_fields', locals: { f: a }

  = link_to_add_fields f, :groups, class: "mdl-button mdl-js-button mdl-button--primary"
    i.material-icons add
    |  new group

  p.field
    br
    br
    br
    br
    br
    = f.submit :class => 'mdl-button mdl-js-button mdl-button--raised'

/ - if @checklist.errors.any?
/   .errors-messages
/     = @checklist.errors.messages.inspect
