.mdl-grid
  .mdl-cell.mdl-cell--3-col.mdl-cell--1-col-tablet.mdl-cell--hide-phone
  .mdl-cell.mdl-cell--6-col
    = form_tag search_path, method: :get
      .mdl-grid
        .mdl-cell.mdl-cell--4-col.mdl-cell--4-col-desktop
          .mdl-textfield.mdl-js-textfield
            = text_field_tag 'sf[q]', params.try(:[], 'sf').try(:[], 'q'), class: 'mdl-textfield__input'
            = label_tag 'sf[q]', 'Search query...', class: 'mdl-textfield__label'
        .mdl-cell.mdl-cell--4-col.mdl-cell--4-col-desktop
          .mdl-selectfield
            = select_tag 'sf[eri]', \
                         options_from_collection_for_select(ExecutorRole.ordered, :id, :name, params.try(:[], 'sf').try(:[], 'eri')), \
                         prompt: 'Category...', \
                         class: 'mdl-selectfield__select'
        .mdl-cell.mdl-cell--4-col.mdl-cell--4-col-desktop
          .mdl-selectfield
            = select_tag 'sf[spc]', \
                         options_from_collection_for_select(Speciality.ordered, :id, :name, params.try(:[], 'sf').try(:[], 'spc')), \
                         prompt: 'Speciality...', \
                         class: 'mdl-selectfield__select'
        .mdl-cell.mdl-cell--4-col.mdl-cell--4-col-desktop
          .mdl-selectfield
            = select_tag 'sf[ord]', \
                         options_for_select([ \
                             ['Diagnosis name', 'dn'], \
                             ['Author name', 'an'], \
                             ['Date created', 'dc'], \
                             ['Hospital name', 'hn'] \
                           ], params.try(:[], 'sf').try(:[], 'ord')), \
                         prompt: 'Order by...', \
                         class: 'mdl-selectfield__select'
        .mdl-cell.mdl-cell--4-col.mdl-cell--8-col-tablet.mdl-cell--8-col-desktop.mdl-typography--text-right
          button class='mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect'
            i.material-icons search
    a id="search-results-zone-start" data-scroll-to=(@have_a_filter ? "yes" : nil)
    - if @checklists.any?
      p
        span.mdl-chip: span.mdl-chip__text
          = @checklists_full_count
          '
          = t(:checklist, count: @checklists_full_count)
          |  found

      ol.check-med-clst-list-full
        - @checklists.includes(:executor_role, :speciality).each_with_index do |checklist, indx|
          li
            .list-item-order-number = "#{@start_order_index + indx + 1}."
            = render partial: 'checklists/list_item', \
                     locals: { checklist: checklist, full: true }

      = paginate @checklists
      / -# TODO Style up the pagination

    - else
      .mdl-typography--subhead style="margin-top:14px" No checklists found
